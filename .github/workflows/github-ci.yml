# This workflow will build a Java project with Maven
# For more information see: https://help.github.com/actions/language-and-framework-guides/building-and-testing-java-with-maven

name: Java CI with Maven

on:
  push:
    branches:
      - '*'

jobs:
  build:
    name: Build the project
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2
    - name: Set up JDK 11
      uses: actions/setup-java@v1
      with:
        java-version: 11

    - name: Create package
      run: mvn clean package -B -DskipTests

  test:
    name: Test the project
    runs-on: ubuntu-latest
    needs: build

    steps:
    - uses: actions/checkout@v2
    - name: Set up JDK 11
      uses: actions/setup-java@v1
      with:
        java-version: 11

    - name: Run tests
      run: mvn test

    - name: Create package
      run: mvn clean package -B

  deploy:
    name: Deploy the project
    runs-on: ubuntu-latest
    needs: test

    steps:
      - uses: actions/checkout@v2
      - name: Set up JDK 11
        uses: actions/setup-java@v1
        with:
          java-version: 11
      - name: Create package
        run: mvn clean package -B -DskipTests
      - name: Create docker image
        run: docker build -t blogservice:latest .
      - name: Push the image to the registry
        run: docker push gustdebacker/blogservice:latest

#  deploy:
#    name: Deploy the project
#    runs-on: ubuntu-latest
#    #     needs: test
#
#    steps:
#      - uses: actions/checkout@v2
#      - name: Set up JDK 11
#        uses: actions/setup-java@v1
#        with:
#          java-version: 11
#      - name: Create package
#        run: mvn clean package -B -DskipTests
#        working-directory: ./BlogService
#      - name: Create docker image
#        run: docker build -t blogservice:latest .
#        working-directory: ./BlogService






#      - name: Run docker container
#        working-directory: ${{env.working-directory}}
#        run: docker run -d --name specialist-blog -p 8080:8080 blogservice:latest


#      - name: Build Docker container
#        run: |
#          mkdir -p ./**/target/*.jar
#          mv artifact/github-actions-java-maven.jar github-actions-java-maven/target
#          docker build -t de.rieckpil.blog/github-actions-sample github-actions-java-maven
#        - name: Access secrets
#          env:
#            SUPER_SECRET: ${{ secrets.SUPER_SECRET }}
#          run: echo "Content of secret - $SUPER_SECRET"
#        - name: Push Docker Images
#          run: echo "Pushing Docker image to Container Registry (e.g. ECR)"
#        - name: Deploy application
#          run: echo "Deploying application (e.g. Kubernets)"

# https://rieckpil.de/github-actions-for-java-automate-your-maven-workflows/
